#include <stdio.h>
#include <stdlib.h> // For system("pause")

// Function prototypes
void startGame();
void displayHighscores();
void displayInstructions();
void displayAuthors();
void showLoadingScreen();

int main() {
    int choice;

    do {
        // Display main menu
        printf("Welcome to Arctic Arithmetic Quest!\n");
        printf("1. Start\n");
        printf("2. Highscores\n");
        printf("3. Instructions\n");
        printf("4. Authors\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        // Process user choice
        switch (choice) {
            case 1:
                showLoadingScreen();
                startGame();
                break;
            case 2:
                displayHighscores();
                break;
            case 3:
                displayInstructions();
                break;
            case 4:
                displayAuthors();
                break;
            case 5:
                printf("Exiting the game. Goodbye!\n");
                break;
            default:
                printf("Invalid choice. Please enter a number between 1 and 5.\n");
        }

        // Pause before clearing screen
        system("pause");
        // Clear screen
        system("cls || clear");
    } while (choice != 5);

    return 0;
}

void startGame() {
    printf("Starting the game...\n");
    // Implement your game logic here
}

void displayHighscores() {
    printf("Displaying highscores...\n");
    // Implement highscores display logic here
}

void displayInstructions() {
    printf("Displaying instructions...\n");
    // Implement instructions display logic here
}

void displayAuthors() {
    printf("Displaying authors...\n");
    // Implement authors display logic here
}

void showLoadingScreen() {
    printf("Loading...\n");
    // Simulate loading with a loading bar using a while loop
    const int totalProgress = 50; // Total length of loading bar
    int progress = 0;
    while (progress < totalProgress) {
        // Update progress
        progress += rand() % 5; // Simulate progress increment
        if (progress > totalProgress) // Ensure progress doesn't exceed total length
            progress = totalProgress;
        printf("[");
        int i = 0;
        while (i < totalProgress) {
            if (i < progress)
                printf("=");
            else
                printf(" ");
            ++i;
        }
        printf("] %d%%\r", (progress * 100) / totalProgress);
        fflush(stdout); // Flush output buffer to display the loading bar immediately
        // Simulate delay
        volatile long long int j = 0;
        while (j < 10000000) {
            ++j;
        }
    }
    printf("\nLoading complete!\n");
}
